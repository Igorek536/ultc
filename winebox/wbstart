#!/bin/bash

### [ WineBox Start ]
###  Author : Igorek536
###   Email : Igorek536.freecore@gmail.com
###    Date : 06.11.2017
### Version : 1.3

export APP_NAME="World of Warcraft - Wrath of the Lich King"
export APP_VER="3.3.5a"
export APP_FOLDER="WoTLK"
export APP_EXE="Wow.exe"
export APP_ARGS="-opengl"
export APP_CHILDPROC=""

export WBOX_PREKILL="no"

export WINE_CSMT="no"
export WINE_FORCEDX9="yes"
export WINE_WINDOWED="yes"
export WINE_RESOLUTION="1366x768"
export WINE_FIXRES="no"
export WINE_USESYSWINE="yes"

########################################################

# Предотвращаем запуск скрипта от имени суперпользователя(root)
if [ ! "$ROOT" ] && [ "$EUID" == "0" ]; then
    echo "Запускайте скрипт без root прав!"
    exit
fi

export USER="$(id -u -n)"

export SCRIPT="$(readlink -f "${BASH_SOURCE[0]}")"
export DIR="$(dirname "$SCRIPT")"
export RHOME="$HOME"
export HOME="$DIR/home"

export WINETRICKS="$DIR/winetricks"

export WINEPREFIX="$DIR/prefix"
export WINEDEBUG="-all"
export WINEDLLOVERRIDES="mscoree,mshtml="
export UPDATEPREFIX="yes"

export CORES="$(getconf _NPROCESSORS_ONLN)"
export WORK_FOLDER="$WINEPREFIX/drive_c/$APP_FOLDER"

# Some optimizations for MESA drivers
export mesa_glthread=true
export __GL_THREADED_OPTIMIZATIONS=1
export __GL_SHADER_DISK_CACHE=1
export __GL_SHADER_DISK_CACHE_PATH=$DIR

# Процессы, которые создаёт Wine
export WINE_WINEPROC="wineserver winedevice.exe services.exe plugplay.exe winedbg explorer.exe"

# WineBox PREKILL
if [ "$WBOX_PREKILL" == "yes" ]; then
    killall $APP_EXE $APP_CHILDPROC $WINE_WINEPROC 2>>/dev/null
fi

# Если у нас одноядерный процессор, принудительно отключаем CSMT.
if [ "$CORES" == "1" ]; then 
    export CSMT="off"
fi

# Если у нас обычный Wine, а не Staging, принудительно отключаем CSMT.
if [ "$WINE_CSMT" == "on" ] && [[ ! "$WINE_VER" == *"Staging"* ]]; then
    export CSMT="off"
fi

if [ "$WINE_USESYSWINE" == "yes" ]; then 
    if [ -f "$DIR/syswine" ]; then
        source "$DIR/syswine"
    fi
    if [ ! -f "$WINE" ]; then 
        if [ -f "/usr/bin/wine" ]; then
            export WINE="/usr/bin/wine"
            export REGEDIT="/usr/bin/regedit"
        elif [ -f "/usr/bin/wine-development" ]; then
            export WINE="/usr/bin/wine-development"
            export REGEDIT="/usr/bin/regedit-development"
        elif [ -f "/usr/local/bin/wine" ]; then
            export WINE="/usr/local/bin/wine"
            export REGEDIT="/usr/local/bin/regedit"
        fi
        if [ "$WINE" ]; then
            rm -f "$DIR/syswine"
            echo "export WINE='$WINE'" >> "$DIR/syswine"
            echo "export REGEDIT='$REGEDIT'" >> "$DIR/syswine"
        fi
    fi
elif [ -f "$DIR/syswine" ]; then
    rm "$DIR/syswine"
fi

if [ ! "$WINE" ]; then
    export WINE="$DIR/wine/bin/wine"
    export REGEDIT="$DIR/wine/bin/regedit"
fi

# Устанавливаем версию вайна
export WINE_VER="$("$WINE" --version)"

# Если каких-то файлов не хватает, выходим из скрипта.
if [ ! -f "$WINE" ] || [ ! -f "$WINETRICKS" ] || [ ! -d "$WORK_FOLDER" ]; then 
    clear
    echo "Отсутствуют(ет):"
    echo
    if [ ! -f "$WINE" ]; then
        echo "$WINE"
    fi

    if [ ! -f "$WINETRICKS" ]; then 
        echo "$WINETRICKS"
    fi

    if [ ! -d "$WORK_FOLDER" ]; then 
        echo "$WORK_FOLDER"
    fi
    exit
fi

# Создаём домашнюю директорию.
if [ "$HOME" == "$DIR/home" ] && [ ! -d "$HOME" ]; then
    mkdir "$HOME"
fi

# Копируем конфиги пульсы
if [ "$HOME" == "$DIR/home" ]; then
    if [ ! -d "$HOME/.config" ]; then 
        mkdir -p "$HOME/.config"
    fi

    if [ ! -d "$HOME/.config/pulse" ]; then 
        cp -R "$RHOME/.config/pulse" "$HOME/.config"
    fi
fi

# Обновляем префикс.
if [ "$UPDATEPREFIX" == "yes" ]; then
    if [ ! -d "$WINEPREFIX/drive_c/users/$USER" ]; then 
        if [ "$WINE_USESYSWINE" == "yes" ]
            then "/usr/bin/wineboot" -u
        else
            "$DIR/wine/bin/wineboot" -u
        fi
        # Disable d3d10 and d3d11
        if [ "$WINE_FORCEDX9" == "yes" ]
            then "$WINETRICKS" d3d10=disabled d3d11=disabled
        fi
    fi
fi

# Включаем звук.
if [ "$USEALSA" == "yes" ] && [ ! -f "$DIR/alsa" ]; then
    "$WINETRICKS" sound=alsa
    echo > "$DIR/alsa"
    rm -f "$DIR/pulse"
elif [ "$USEALSA" == "no" ] && [ ! -f "$DIR/pulse" ]; then 
    "$WINETRICKS" sound=pulse
    echo > "$DIR/pulse"
    rm -f "$DIR/alsa"
fi

# Включаем, или отключаем CSMT.
if [ ! -f "$DIR/csmt.reg" ]; then
    echo -e 'REGEDIT4\n\n[HKEY_CURRENT_USER\Software\Wine\DllRedirects]\n"wined3d"="wined3d-csmt.dll"' > "$DIR/csmt.reg"
fi

if [ ! -f "$DIR/non-csmt.reg" ]; then
    echo -e 'REGEDIT4\n\n[HKEY_CURRENT_USER\Software\Wine\DllRedirects]\n\n"wined3d"=-' > "$DIR/non-csmt.reg"
fi

if [ -f "$DIR/csmt_on" ] && [ "$WINE_CSMT" == "off" ]; then
    "$REGEDIT" "$DIR/non-csmt.reg"
    rm "$DIR/csmt_on"
elif [ ! -f "$DIR/csmt_on" ] && [ "$WINE_CSMT" == "on" ]; then
    "$REGEDIT" "$DIR/csmt.reg"
    echo > "$DIR/csmt_on"
fi

# Используем sandbox окружения скрипта winetricks.
chmod +x "$WINETRICKS"
"$WINETRICKS" sandbox

# Получаем нативное разрешение экрана.
if [ "$WINE_FIXRES" == "yes" ]; then
    if [ "$WINE_WINDOWED" == "no" ] && [ ! "$1" == "-sw" ] && [ -f "/usr/bin/xrandr" ]; then
        export RESOLUTION="$(xrandr -q | awk -F'current' -F',' 'NR==1 {gsub("( |current)","");print $2}')"
    else 
        export WINE_FIXRES="no"
    fi
fi

# Info output
clear
echo "WineBox Start"
echo "$WINE_VER"
echo "csmt: $WINE_CSMT"
echo "===================="
echo "application: $APP_NAME"
echo "version: $APP_VER"
echo "command: $APP_EXE $APP_ARGS"
echo "===================="
echo "home: $HOME"
echo

# Запускаем приложение.
cd "$WORK_FOLDER"
if [ "$WINE_WINDOWED" == "yes" ] || [ "$1" == "-sw" ]; then
    "$WINE" explorer /desktop=Game,$WINE_RESOLUTION "$APP_EXE" "$APP_ARGS"
else 
    "$WINE" "$APP_EXE"
fi

# Восстанавливаем разрешение экрана.
if [ "$WINE_FIXRES" == "yes" ]; then
    "/usr/bin/xrandr" -s "$WINE_RESOLUTION"
fi

#EOF
